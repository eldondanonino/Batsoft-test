{"version":3,"sources":["Components/SubmitButton.js","Components/InputField.js","Components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","onClick","props","method","this","text","Component","InputField","type","placeholder","value","onChange","e","target","LoginForm","SendValues","bind","SetValue","ResetValue","state","username","password","console","log","property","trim","setState","LogIn","err","App","handleLogOut","handleLogIn","handleSignup","getStatus","sleep","login","user","milliseconds","date","Date","now","currentDate","un","pw","a","fetch","headers","body","JSON","stringify","res","json","result","message","success","logged","path","exact","push","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7178534b.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass SubmitButton extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <button onClick = { () => this.props.method()}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton","import React, {Component} from 'react'\r\n\r\nclass InputField extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <input\r\n                type = {this.props.type}\r\n                placeholder = {this.props.placeholder}\r\n                value = {this.props.value}\r\n                onChange = { (e) => this.props.onChange(e.target.value)}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField","import { Component } from 'react'\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\n\r\nclass LoginForm extends Component\r\n{\r\n\r\n    componentDidMount()\r\n    {\r\n        this.ResetValue()\r\n        console.log(\"login form mounted\")\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.SendValues = this.SendValues.bind(this)\r\n        this.SetValue = this.SetValue.bind(this)\r\n        this.ResetValue = this.ResetValue.bind(this)\r\n        this.state = \r\n        {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n    }\r\n\r\n    SetValue(property, value)\r\n    {\r\n        value = value.trim() //No need for spaces in a username\r\n        this.setState(\r\n            {\r\n                [property]: value\r\n            }\r\n        )\r\n        console.log(`${property} : ${value}`)\r\n\r\n    }\r\n\r\n    ResetValue()\r\n    {\r\n        this.setState(\r\n            {\r\n            username: '',\r\n            password: '',\r\n            }\r\n        )\r\n    }\r\n\r\n    SendValues(username, password) //I will use this to send the values to my backend\r\n    {\r\n        console.log(`Received :\\n Username : ${username} , Password : ${password}`)\r\n        if(!username && !password)\r\n        {\r\n            console.log(\"No un and no pw\")\r\n            return\r\n        }\r\n        if(!username || !password )\r\n            {\r\n                if(!username) \r\n                {\r\n                    console.log(\"Invalid request : wrong un\") \r\n                }\r\n                \r\n                if(!password)\r\n                {\r\n                    console.log(\"Invalid request : wrong pw\") \r\n                }\r\n                this.ResetValue()\r\n                return\r\n            }\r\n        \r\n        try{\r\n            console.log(`Sending to the APP : \\nUsername : ${username} , Password : ${password}`)\r\n            this.props.LogIn(username, password)\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const username = this.state.username\r\n        const password = this.state.password\r\n        return(\r\n            <div>\r\n                <InputField placeholder = {'username'} type = 'text' value = {username ? this.state.username : ''} onChange = { (value) => this.SetValue('username', value) }/> \r\n                <InputField placeholder = {'password'} type = 'password' value = {password ? this.state.password : ''} onChange = { (value) => this.SetValue('password', value) }/> \r\n                <SubmitButton text = \"Hi :) \" method = {() => this.SendValues(username, password)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginForm","import React, {Component} from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport SubmitButton from './Components/SubmitButton'\nimport LoginForm from './Components/LoginForm'\n\nclass App extends Component{\n  constructor()\n  {\n    super()\n    this.handleLogOut = this.handleLogOut.bind(this)\n    this.handleLogIn = this.handleLogIn.bind(this)\n    this.handleSignup = this.handleSignup.bind(this)\n    this.getStatus = this.getStatus.bind(this)\n    this.sleep = this.sleep.bind(this)\n\n    this.state = {\n      login: false,\n      user: ''\n    }\n  }\n\n  componentDidMount()\n  {\n    console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\n    this.getStatus() \n    \n  }\n  \n  sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n\n  async handleLogIn(un, pw)\n  {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`)\n    try\n    {\n      let res = await fetch ('/login', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({\n          username : un,\n          password : pw\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Message from the server : ${result.message}`)\n      if(result && result.success)\n      {\n        this.setState({user : result.username, login : true})\n        console.log(`Login successful, welcome ${this.state.user}`)\n        this.setState({login : true})\n      }\n      else\n      {\n        console.log('Error while logging in (not critical)')\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING IN')\n    }\n  }\n  \n  async handleLogOut(un)\n  {\n    console.log(`UN : ${un}`)\n    try\n    {\n      let res = await fetch ('/logout', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify(\n        {\n          username: un\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Server respons : ${result.message}`)\n      if(result && result.success)\n      {\n        this.setState({user : \"\"})\n        this.setState({login: false})\n        console.log('Logout successful')\n      }\n      else\n      {\n        console.log('Error while logging out (not critical)')\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING OUT')\n    }\n\n  }\n\n  async getStatus()\n  {\n    try{\n    console.log(\"Sending a status request to the back\")\n    let res = await fetch ('/getstatus',\n    {\n      method : 'post',\n      headers: {\n        'Accept' : 'application/json',\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(\n      {\n        logged: 1\n      })\n    })\n\n    let result = await res.json()\n      console.log(`Server respons : ${result.message}`)\n\n      if(result && result.success)\n      {\n        console.log(`Logged in : ${result.username}`)\n        this.setState({login : true})\n        return result.success\n      }\n      else\n      {\n        console.log('Error while contacting the server (not critical)')\n        this.setState({login : false})\n        return result.success\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE CONTACTING THE SERVER')\n      this.setState({login : false})\n      return 0\n    }\n  }\n\n  async handleSignup(un, pw)\n  {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`)\n    try\n    {\n      let res = await fetch ('/signup', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({\n          username : un,\n          password : pw\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Message from the server : ${result.message}`)\n      if(result && result.success)\n      {\n        console.log(`Signup successful, welcome ${this.state.user}`)\n      }\n      else\n      {\n        console.log('Error while signing up (not critical)')\n      }\n      <Redirect push to = '/success'/>\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE SIGNING UP')\n    }\n  }\n\n  render()\n  {\n    this.sleep(50)\n    this.getStatus()\n    const login = this.state.login\n    console.log(login)\n    return(\n      <Router>\n        <div>\n\n          <Route path = '/' exact>   \n          {/*login = this.getStatus()*/}\n          {login === true ? <Redirect push to= \"/main-menu\"/> : console.log(\"not logged in\") }\n          <div>\n              <h1>LoginPage</h1> \n              <LoginForm LogIn = {this.handleLogIn}/>\n          </div>\n          </Route>\n\n          <Route path = '/signup' exact>\n\n            <div> \n              <h1> Signup page </h1>\n              <LoginForm LogIn = {this.handleSignup} />\n            </div>\n          </Route>\n\n          <Route path = '/main-menu' exact> \n          { login !== true ? <Redirect push to= \"/\"/> : console.log(\"logged in\") }\n            <div>\n              <h1>You are logged in!</h1> \n              <h3>Main menu</h3>\n              <SubmitButton text = 'Log Out' method = {() => this.handleLogOut(\"daniil\")}/>\n            </div>\n          </Route> \n\n\n\n\n\n        </div> \n      </Router>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}