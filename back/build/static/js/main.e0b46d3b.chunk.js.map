{"version":3,"sources":["Components/SubmitButton.js","Components/InputField.js","Components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","className","onClick","props","method","this","text","Component","InputField","type","placeholder","value","onChange","e","target","LoginForm","SendValues","bind","SetValue","ResetValue","state","username","password","property","trim","setState","console","log","alert","LogIn","err","App","handleLogOut","handleLogIn","handleSignup","getStatus","login","user","un","pw","a","fetch","headers","Accept","body","JSON","stringify","res","json","result","message","success","logged","path","exact","push","to","src","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b46d3b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SubmitButton extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"submit\" onClick={() => this.props.method()}>\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from \"react\";\r\nimport \"../style.css\";\r\n\r\nclass InputField extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          className=\"inputfield\"\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import { Component } from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\n\r\nclass LoginForm extends Component {\r\n  componentDidMount() {\r\n    this.ResetValue();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.SendValues = this.SendValues.bind(this);\r\n    this.SetValue = this.SetValue.bind(this);\r\n    this.ResetValue = this.ResetValue.bind(this);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  //Alters the current state of credentials\r\n  SetValue(property, value) {\r\n    value = value.trim(); //No need for spaces in a username\r\n    this.setState({\r\n      [property]: value,\r\n    });\r\n  }\r\n\r\n  //Resets the credentials\r\n  ResetValue() {\r\n    this.setState({\r\n      username: \"\",\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  //Sends the curated credentials to the server\r\n  SendValues(\r\n    username,\r\n    password //I will use this to send the values to my backend\r\n  ) {\r\n    console.log(`Received :\\n Username : ${username} , Password : ${password}`);\r\n    if (!username && !password) {\r\n      return;\r\n    }\r\n    if (!username || !password) {\r\n      if (!username) {\r\n        alert(\"Invalid request : no username\");\r\n      }\r\n\r\n      if (!password) {\r\n        alert(\"Invalid request : no password\");\r\n      }\r\n      this.ResetValue();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.props.LogIn(username, password);\r\n      this.ResetValue();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n    return (\r\n      <div className=\"centerer\">\r\n        <InputField\r\n          placeholder={\"username\"}\r\n          type=\"text\"\r\n          value={username ? this.state.username : \"\"}\r\n          onChange={(value) => this.SetValue(\"username\", value)}\r\n        />\r\n        <InputField\r\n          placeholder={\"password\"}\r\n          type=\"password\"\r\n          value={password ? this.state.password : \"\"}\r\n          onChange={(value) => this.SetValue(\"password\", value)}\r\n        />\r\n        <SubmitButton\r\n          text= {this.props.text}\r\n          method={() => this.SendValues(username, password)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n  Route,\n} from \"react-router-dom\";\nimport SubmitButton from \"./Components/SubmitButton\";\nimport LoginForm from \"./Components/LoginForm\";\nimport \"./style.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleSignup = this.handleSignup.bind(this);\n    this.getStatus = this.getStatus.bind(this);\n\n    this.state = {\n      login: false,\n      user: \"\",\n    };\n  }\n\n  componentDidMount() {\n    //Initial check for the login status of our database\n    this.getStatus();\n  }\n\n  //Login handler : sends the username and the password to the API for it to check if the credentials are valid\n  async handleLogIn(un, pw) {\n    try {\n      let res = await fetch(\"/login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: un,\n          password: pw,\n        }),\n      });\n\n      let result = await res.json();\n      console.log(`Message from the server : ${result.message}`);\n      if (result && result.success) {\n        this.setState({ user: result.username, login: true });\n        alert(`Login successful, welcome ${this.state.user}`);\n        this.setState({ login: true });\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      console.log(\"ERROR WHILE LOGGING IN\");\n    }\n  }\n\n  //Logout handler : pretty much the same, requests the logout from the API\n  async handleLogOut() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: \"\",\n        }),\n      });\n\n      let result = await res.json();\n      console.log(`Server response : ${result.message}`);\n      if (result && result.success) {\n        this.getStatus();\n        alert(\"Logout successful\");\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      console.log(\"ERROR WHILE LOGGING OUT\");\n    }\n  }\n\n  //Status getter : checking with the API for a login state, and updates it accordingly\n  async getStatus() {\n    try {\n      console.log(\"Sending a status request to the back\");\n      let res = await fetch(\"/getstatus\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          logged: 1,\n        }),\n      });\n\n      let result = await res.json();\n      console.log(`Server respons : ${result.message}`);\n\n      if (result && result.success) {\n        console.log(`Logged in : ${result.username}`);\n        this.setState({ login: true });\n        return result.success;\n      } else {\n        console.log(\"Error while contacting the server (not critical)\");\n        this.setState({ login: false });\n        return result.success;\n      }\n    } catch (err) {\n      console.log(\"ERROR WHILE CONTACTING THE SERVER\");\n      this.setState({ login: false });\n      return 0;\n    }\n  }\n\n  //user creation : send credentials to add to the database\n  async handleSignup(un, pw) {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`);\n    try {\n      let res = await fetch(\"/signup\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: un,\n          password: pw,\n        }),\n      });\n      let result = await res.json();\n      console.log(`Message from the server : ${result.message}`);\n      if (result && result.success) {\n        alert(`Signup successful, try logging in!`);\n      } else {\n        alert(result.message);\n      }\n    } catch (err) {\n      console.log(\"ERROR WHILE SIGNING UP\");\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Route path=\"/\" exact>\n            {() => this.getStatus()}\n            {this.state.login === true ? (\n              <Redirect push to=\"/main-menu\" />\n            ) : (\n              <></>\n            )}\n            <div className=\"login-form\">\n              <p className=\"title\">Login Page</p>\n              <LoginForm text = \"Log in!\" LogIn={this.handleLogIn} />\n              <br />\n              <Link className=\"link\" to={\"/sign-up\"}>\n                Sign up now!\n              </Link>\n            </div>\n          </Route>\n\n          <Route path=\"/sign-up\" exact>                   \n            {() => this.getStatus()}\n            {this.state.login === true ? (\n              <Redirect push to=\"/main-menu\" />\n            ) : (\n              <></>\n            )}\n            <div className=\"login-form\">\n              <h1 className=\"title\"> Signup page </h1>\n              <LoginForm text = \"Sign up!\" LogIn={this.handleSignup} />\n              <br />\n              <Link className=\"link\" to={\"/\"}>\n                Main Menu\n              </Link>\n            </div>\n          </Route>\n\n          <Route path=\"/main-menu\" exact>\n            {() => this.getStatus()}\n            {this.state.login !== true ? <Redirect push to=\"/\" /> : <></>}\n            <div className=\"centerer\">\n              <h1 className=\"title\">Welcome {this.state.user}!</h1>\n              <p>\n                Here is the exclusive content : a person that does not exist!{\" \"}\n              </p>\n              <img\n                src=\"https://thispersondoesnotexist.com/image\"\n                width=\"600\"\n                height=\"600\"\n              />\n              <SubmitButton text=\"Log Out\" method={() => this.handleLogOut()} />\n            </div>\n          </Route>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}