{"version":3,"sources":["Components/SubmitButton.js","Components/InputField.js","Components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","onClick","props","method","this","text","Component","InputField","type","placeholder","value","onChange","e","target","LoginForm","SendValues","bind","SetValue","ResetValue","state","username","password","property","trim","setState","console","log","LogIn","err","App","handleLogOut","handleLogIn","login","user","un","pw","a","fetch","headers","body","JSON","stringify","res","json","result","success","push","to","path","exact","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.642030f4.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass SubmitButton extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <button onClick = { () => this.props.method()}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton","import React, {Component} from 'react'\r\n\r\nclass InputField extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <input\r\n                type = {this.props.type}\r\n                placeholder = {this.props.placeholder}\r\n                value = {this.props.value}\r\n                onChange = { (e) => this.props.onChange(e.target.value)}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField","import { Component } from 'react'\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\n\r\nclass LoginForm extends Component\r\n{\r\n\r\n    componentDidUpdate()\r\n    {\r\n        //console.log(\"LoginForm UPDATED\")\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.SendValues = this.SendValues.bind(this)\r\n        this.SetValue = this.SetValue.bind(this)\r\n        this.ResetValue = this.ResetValue.bind(this)\r\n        this.state = \r\n        {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n    }\r\n\r\n    SetValue(property, value)\r\n    {\r\n        value = value.trim() //No need for spaces in a username\r\n        this.setState(\r\n            {\r\n                [property]: value\r\n            }\r\n        )\r\n        console.log(`${property} : ${value}`)\r\n\r\n    }\r\n\r\n    ResetValue()\r\n    {\r\n        this.setState(\r\n            {\r\n            username: '',\r\n            password: '',\r\n            }\r\n        )\r\n    }\r\n\r\n    SendValues(username, password) //I will use this to send the values to my backend\r\n    {\r\n        console.log(`Received :\\n Username : ${username} , Password : ${password}`)\r\n        if(!username && !password)\r\n        {\r\n            console.log(\"No un and no pw\")\r\n            return\r\n        }\r\n        if(!username || !password )\r\n            {\r\n                if(!username) \r\n                {\r\n                    console.log(\"Invalid request : wrong un\") \r\n                }\r\n                \r\n                if(!password)\r\n                {\r\n                    console.log(\"Invalid request : wrong pw\") \r\n                }\r\n                this.ResetValue()\r\n                return\r\n            }\r\n        \r\n        try{\r\n            console.log(`Sending to the APP : \\nUsername : ${username} , Password : ${password}`)\r\n            this.props.LogIn(username, password)\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const username = this.state.username\r\n        const password = this.state.password\r\n        return(\r\n            <div>\r\n                <InputField placeholder = {'username'} type = 'text' value = {username ? this.state.username : ''} onChange = { (value) => this.SetValue('username', value) }/> \r\n                <InputField placeholder = {'password'} type = 'password' value = {password ? this.state.password : ''} onChange = { (value) => this.SetValue('password', value) }/> \r\n                <SubmitButton text = \"Hi :) \" method = {() => this.SendValues(username, password)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginForm","import React, {Component} from 'react'\nimport './App.css'\nimport { observer } from 'mobx-react'\nimport { BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport SubmitButton from './Components/SubmitButton'\nimport LoginForm from './Components/LoginForm'\n\nclass App extends Component{\n  constructor()\n  {\n    super()\n    this.handleLogOut = this.handleLogOut.bind(this)\n    this.handleLogIn = this.handleLogIn.bind(this)\n    /*this.handleWrongUn = this.handleWrongUn.bind(this)\n    this.handleWrongPw = this.handleWrongPw.bind(this)*/\n\n    this.state = {\n      login: false,\n      user: ''\n    }\n  }\n\n  async handleLogIn(un, pw)\n  {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`)\n    try\n    {\n      let res = await fetch ('/login', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({\n          username : un,\n          password : pw\n        })\n      })\n\n      let result = await res.json()\n      if(result && result.success)\n      {\n        this.setState({user : result.username})\n        console.log(`Login successful, welcome ${this.state.user}`)\n      }\n      else\n      {\n        console.log('Error while logging in (not critical)')\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING IN')\n    }\n  }\n  \n  async handleLogOut()\n  {\n    /*this.setState({login: false})\n    console.log(\"Logged Out!\")*/\n    try\n    {\n      let res = await fetch ('/logout', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application.json'\n        }\n      })\n\n      let result = await res.json()\n      if(result && result.success)\n      {\n        console.log('Logout successful')\n      }\n      else\n      {\n        console.log('Error while logging out (not critical)')\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING OUT')\n    }\n\n  }\n/*\n  handleWrongPw(isTrue)\n  {\n    if(this.state.wrong_pw !== isTrue)\n    {\n      (isTrue)? this.setState({wrong_pw: true}) : this.setState({wrong_pw: false})\n    }\n    else console.log(\"No Change Needed\")\n  }\n\n  handleWrongUn(isTrue)\n  { \n    if(this.state.wrong_un !== isTrue)\n    {\n      (isTrue)? this.setState({wrong_un: true}) : this.setState({wrong_un: false})\n    }\n    else console.log(\"No Change Needed\")\n  }\n*/\n\n\n  render()\n  {\n    const login = this.state.login\n    //console.log(`login : ${login}`)\n    return(\n      <Router>\n\n\n        <div>\n\n          {login === true ? <Redirect push to= \"/main-menu\"/> : <Redirect push to= \"/\"/>}\n\n          <Route path = '/' exact>   \n          {login === true ? <Redirect push to= \"/main-menu\"/> : console.log(\"not logged in\") }\n          <div>\n              <h1>LoginPage</h1> \n              <LoginForm LogIn = {this.handleLogIn}/>\n          </div>\n          </Route>\n\n          <Route path = '/main-menu' exact> \n            <div>\n              <h1>You are logged in!</h1> \n              <h3>Main menu</h3>\n              <SubmitButton text = 'Log Out' method = {this.handleLogOut}/>\n            </div>\n          </Route> \n\n        </div> \n        \n      \n      </Router>\n    )\n    \n\n  }\n}\n\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}