{"version":3,"sources":["Components/SubmitButton.js","Components/InputField.js","Components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","className","onClick","props","method","this","text","Component","InputField","type","placeholder","value","onChange","e","target","LoginForm","SendValues","bind","SetValue","ResetValue","state","username","password","property","trim","setState","console","log","alert","LogIn","err","App","handleLogOut","handleLogIn","handleSignup","getStatus","login","user","un","pw","a","fetch","headers","body","JSON","stringify","res","json","result","message","success","logged","path","exact","push","to","src","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7cce765.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass SubmitButton extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <button className = \"submit\" onClick = { () => this.props.method()}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitButton","import React, {Component} from 'react'\r\nimport \"../style.css\"\r\n\r\nclass InputField extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <input className = \"inputfield\"\r\n                type = {this.props.type}\r\n                placeholder = {this.props.placeholder}\r\n                value = {this.props.value}\r\n                onChange = { (e) => this.props.onChange(e.target.value)}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField","import { Component } from 'react'\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\n\r\n\r\nclass LoginForm extends Component\r\n{\r\n\r\n    componentDidMount()\r\n    {\r\n        this.ResetValue()\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.SendValues = this.SendValues.bind(this)\r\n        this.SetValue = this.SetValue.bind(this)\r\n        this.ResetValue = this.ResetValue.bind(this)\r\n        this.state = \r\n        {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n    }\r\n\r\n    SetValue(property, value)\r\n    {\r\n        value = value.trim() //No need for spaces in a username\r\n        this.setState(\r\n            {\r\n                [property]: value\r\n            }\r\n        )\r\n        //console.log(`${property} : ${value}`)\r\n\r\n    }\r\n\r\n    ResetValue()\r\n    {\r\n        this.setState(\r\n            {\r\n            username: '',\r\n            password: '',\r\n            }\r\n        )\r\n    }\r\n\r\n    SendValues(username, password) //I will use this to send the values to my backend\r\n    {\r\n        console.log(`Received :\\n Username : ${username} , Password : ${password}`)\r\n        if(!username && !password)\r\n        {\r\n            console.log(\"No un and no pw\")\r\n            return\r\n        }\r\n        if(!username || !password )\r\n            {\r\n                if(!username) \r\n                {\r\n                    alert(\"Invalid request : no username\") \r\n                }\r\n                \r\n                if(!password)\r\n                {\r\n                    alert(\"Invalid request : no password\") \r\n                }\r\n                this.ResetValue()\r\n                return\r\n            }\r\n        \r\n        try{\r\n            this.props.LogIn(username, password)\r\n            this.ResetValue()\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const username = this.state.username\r\n        const password = this.state.password\r\n        return(\r\n            <div className = \"centerer\">\r\n                <InputField placeholder = {'username'} type = 'text' value = {username ? this.state.username : ''} onChange = { (value) => this.SetValue('username', value) }/> \r\n                <InputField placeholder = {'password'} type = 'password' value = {password ? this.state.password : ''} onChange = { (value) => this.SetValue('password', value) }/>\r\n                <SubmitButton text = \"Login!\" method = {() => this.SendValues(username, password)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginForm","import React, {Component} from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Link, Redirect, Route} from 'react-router-dom'\nimport SubmitButton from './Components/SubmitButton'\nimport LoginForm from './Components/LoginForm'\nimport \"./style.css\"\n\nclass App extends Component{\n  constructor()\n  {\n    super()\n    this.handleLogOut = this.handleLogOut.bind(this)\n    this.handleLogIn = this.handleLogIn.bind(this)\n    this.handleSignup = this.handleSignup.bind(this)\n    this.getStatus = this.getStatus.bind(this)\n\n    this.state = {\n      login: false,\n      user: ''\n    }\n  }\n\n  componentDidMount()\n  {\n    this.getStatus() \n  }\n\n  async handleLogIn(un, pw)\n  {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`)\n    try\n    {\n      let res = await fetch ('/login', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({\n          username : un,\n          password : pw\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Message from the server : ${result.message}`)\n      if(result && result.success)\n      {\n        this.setState({user : result.username, login : true})\n        alert(`Login successful, welcome ${this.state.user}`)\n        this.setState({login : true})\n      }\n      else\n      {\n        alert(result.message)\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING IN')\n    }\n  }\n  \n  async handleLogOut()\n  {\n    console.log('logging out...')\n    try\n    {\n      let res = await fetch ('/logout', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify(\n        {\n          username: \"\"\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Server response : ${result.message}`)\n      if(result && result.success)\n      {\n        this.getStatus()\n        alert('Logout successful')\n      }\n      else\n      {\n        alert(result.message)\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE LOGGING OUT')\n    }\n\n  }\n\n  async getStatus()\n  {\n    try{\n    console.log(\"Sending a status request to the back\")\n    let res = await fetch ('/getstatus',\n    {\n      method : 'post',\n      headers: {\n        'Accept' : 'application/json',\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(\n      {\n        logged: 1\n      })\n    })\n\n    let result = await res.json()\n      console.log(`Server respons : ${result.message}`)\n\n      if(result && result.success)\n      {\n        console.log(`Logged in : ${result.username}`)\n        this.setState({login : true})\n        return result.success\n      }\n      else\n      {\n        console.log('Error while contacting the server (not critical)')\n        this.setState({login : false})\n        return result.success\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE CONTACTING THE SERVER')\n      this.setState({login : false})\n      return 0\n    }\n  }\n\n  async handleSignup(un, pw)\n  {\n    console.log(`SENDING TO THE API : ${un} + ${pw}`)\n    try\n    {\n      let res = await fetch ('/signup', \n      {\n        method : 'post',\n        headers: {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json'\n        },\n        body : JSON.stringify({\n          username : un,\n          password : pw\n        })\n      })\n\n      let result = await res.json()\n      console.log(`Message from the server : ${result.message}`)\n      if(result && result.success)\n      {\n        alert(`Signup successful, try logging in!`)\n      }\n      else\n      {\n        alert(result.message)\n      }\n    }\n    catch(err)\n    {\n      console.log('ERROR WHILE SIGNING UP')\n    }\n  }\n\n  render()\n  {\n    return(\n      <Router>\n        <div className = \"container\">\n\n          <Route path = '/' exact>   \n          {() => this.getStatus()}\n          {this.state.login === true ? <Redirect push to= \"/main-menu\"/> : <></> }\n          <div className = \"login-form\">\n              <p className = \"title\">Login Page</p> \n              <LoginForm LogIn = {this.handleLogIn}/>\n              <br/>\n              <Link className = \"link\" to ={\"/sign-up\"}>Sign up now!</Link>\n          </div>\n          </Route>\n\n          <Route path = '/sign-up' exact>\n          {() => this.getStatus()}\n          {this.state.login === true ? <Redirect push to= \"/main-menu\"/> : <></> }\n            <div className = \"login-form\"> \n              <h1 className = \"title\"> Signup page </h1>\n              <LoginForm LogIn = {this.handleSignup} />\n              <br/>\n             <Link className =\"link\" to ={\"/\"}>Main Menu</Link>\n            </div>\n          </Route>\n\n          <Route path = '/main-menu' exact> \n          {() => this.getStatus()}\n          { this.state.login !== true ? <Redirect push to= \"/\"/> : <></> }\n            <div className = \"centerer\"> \n              <h1 className = \"title\">Welcome {this.state.user}!</h1>\n              <p>Here is the exclusive content : a person that does not exist! </p>\n              <img src = 'https://thispersondoesnotexist.com/image'  width=\"600\" height=\"600\" />\n              <SubmitButton text = 'Log Out' method = {() => this.handleLogOut()}/>\n            </div>\n          </Route> \n\n        </div> \n      </Router>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}